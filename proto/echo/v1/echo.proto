syntax = "proto3";

package echo.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Echo"
    version: "0.0.1"
    description: ""
    contact: {
      name: "kanziw"
      url: "https://github.com/kanziw/grpc-node-playground"
      email: "kanziwoong@gmail.com"
    }
  }
  schemes: HTTPS
  consumes: "application/json"
  produces: "application/json"
};

service EchoService {
  rpc Echo(EchoRequest) returns (EchoResponse) {
    option (google.api.http) = {
      get: "/echo/{message}"
      additional_bindings {
        get: "/v1/echo/{message}"
      }
    };
  };
  rpc EchoStream(EchoStreamRequest) returns (stream EchoStreamResponse);
  rpc StreamEcho(stream StreamEchoRequest) returns (StreamEchoResponse);
  rpc Chat(stream ChatRequest) returns (stream ChatResponse);
}

message EchoRequest {
  string message = 1;
}

message EchoResponse {
  string message = 1;
  google.protobuf.Timestamp response_time = 2;
}

message EchoStreamRequest {
  string message = 1;
  int32 repeat_count = 2;
}

message EchoStreamResponse {
  string message = 1;
  int32 sequence_number = 2;
  google.protobuf.Timestamp response_time = 3;
}

message StreamEchoRequest {
  string message_part = 1;
}

message StreamEchoResponse {
  string full_message = 1;
  google.protobuf.Timestamp response_time = 2;
}

message ChatRequest {
  string user_id = 1;
  string message = 2;
  google.protobuf.Timestamp response_time = 3;
}

message ChatResponse {
  string user_id = 1;
  string message = 2;
  google.protobuf.Timestamp response_time = 3;
}
